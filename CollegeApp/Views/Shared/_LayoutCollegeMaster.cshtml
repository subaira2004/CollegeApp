<!DOCTYPE html>
<html>
<head>
    <base href="/Master/">
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - College App</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @Styles.Render("~/Content/angularDateTimePickerCSS")
</head>
<body style="min-height: 100vh;height: auto;">
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Application name", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Home", "Index", "Home")</li>
                    <li>@Html.ActionLink("About", "About", "Home")</li>
                    <li>@Html.ActionLink("Contact", "Contact", "Home")</li>
                    <li>@Html.ActionLink("Master", "Index", "Master")</li>
                </ul>
            </div>
        </div>
    </div>

    <div class="container body-content" ng-app="myApp">
        <div class="col-xs-3" ng-init="selectedTab = 'Dept'">
            <!-- required for floating -->
            <!-- Nav tabs -->
            <ul class="nav nav-tabs tabs-left nav-stacked">
                <li ng-class="{'active':selectedTab === 'Dept'}" ng-click="selectedTab = 'Dept'"><a href="Department">Department</a></li>
                <li ng-class="{'active':selectedTab === 'Sect'}" ng-click="selectedTab = 'Sect'"><a href="Section">Section</a></li>
                <li ng-class="{'active':selectedTab === 'Stud'}" ng-click="selectedTab = 'Stud'"><a href="Student">Student</a></li>
                <li ng-class="{'active':selectedTab === 'Lect'}" ng-click="selectedTab = 'Lect'"><a href="Lecturer">Lecturer</a></li>
            </ul>
        </div>
        <div class="col-xs-9">

            <div class="row" ng-view>
                @RenderBody()
            </div>

        </div>
    </div>
    <footer class="footer">
        <p>&nbsp;&nbsp;&nbsp;&nbsp;&copy; @DateTime.Now.Year - College App</p>
    </footer>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/angularjs")
    @RenderSection("scripts", required: false)
    <script>
        var myApp = angular.module('myApp', ["ngRoute","angularjs-datetime-picker"]).config(function ($routeProvider, $httpProvider, $locationProvider) {

            $locationProvider.hashPrefix('!').html5Mode(true);

            $routeProvider.when('/', {
                templateUrl: '/CollegeAppMaster/Department',
                controller: 'DepartmentController'
            }).when('/Department', {
                templateUrl: '/CollegeAppMaster/Department',
                controller: 'DepartmentController'
            }).when('/Section', {
                templateUrl: '/CollegeAppMaster/Section',
                controller: 'SectionController'
            }).when('/Student', {
                templateUrl: '/CollegeAppMaster/Student',
                controller: 'StudentController'
            }).otherwise({
                redirectTo: '/Department'
            });

            // $httpProvider.interceptors.push('AuthHttpResponseInterceptor');
        });


        //myapp.Service('CollegeMaster', function () {

        //});

        //Department Controller
        myApp.controller("DepartmentController", ["$http", "$scope", "$routeParams", function ($http, $scope, $routeParams) {
            $scope.dataLoaded = false;
            $scope.search = '';
            $scope.departments = [];
            $scope.department = {};


            $scope.submit = function () {
                $scope.dataLoaded = false;
                $http({
                    method: 'POST',
                    url: '/CollegeAppMaster/Department',
                    data: $scope.department
                }).then(function successCallback(response) {
                    // this callback will be called asynchronously
                    // when the response is available
                    $scope.departments = response.data;
                    $scope.department = {};
                    $scope.dataLoaded = true;
                }, function errorCallback(response) {
                    // called asynchronously if an error occurs
                    // or server returns response with an error status.
                    alert(response.data.Error);
                    $scope.dataLoaded = true;
                });

                //$scope.department ={};// { 'Name': '', 'DepartmentId' : '' };
            };

            $http({
                method: 'GET',
                url: '/CollegeAppMaster/AllDepartments'
            }).then(function successCallback(response) {
                // this callback will be called asynchronously
                // when the response is available
                $scope.departments = response.data;
                $scope.dataLoaded = true;
            }, function errorCallback(response) {
                alert(response.data.Error);
                $scope.dataLoaded = true;
                // called asynchronously if an error occurs
                // or server returns response with an error status.
            });

            $scope.EditDepartment = function (DepartmentId) {
                $scope.dataLoaded = false;
                $http({
                    method: 'GET',
                    url: '/CollegeAppMaster/EditDepartments?DepartmentId=' + DepartmentId
                }).then(function successCallback(response) {
                    // this callback will be called asynchronously
                    // when the response is available
                    $scope.department = response.data;
                    $scope.dataLoaded = true;
                }, function errorCallback(response) {
                    alert(response.data.Error);
                    $scope.dataLoaded = true;
                    // called asynchronously if an error occurs
                    // or server returns response with an error status.
                });
            };
            $scope.DeleteDepartment = function (DepartmentId) {
                if (confirm('Are you want to Delete?')) {
                    $scope.dataLoaded = false;
                    $http({
                        method: 'GET',
                        url: '/CollegeAppMaster/DeleteDepartments?DepartmentId=' + DepartmentId
                    }).then(function successCallback(response) {
                        // this callback will be called asynchronously
                        // when the response is available
                        $scope.departments = response.data;
                        $scope.dataLoaded = true;
                    }, function errorCallback(response) {
                        alert(response.data.Error);
                        $scope.dataLoaded = true;
                        // called asynchronously if an error occurs
                        // or server returns response with an error status.
                    });
                }
            };

        }]);

        //section Controller
        myApp.controller("SectionController", ["$http", "$scope", "$routeParams", function ($http, $scope, $routeParams) {
            $scope.dataLoaded = false;
            $scope.search = '';
            $scope.sections = [];
            $scope.section = {};
            $scope.selectedDepartment = {};
            $scope.departments = [];

            //To save / Update Section
            $scope.submitSection = function () {
                $scope.dataLoaded = false;
                $scope.section.DepartmentId = $scope.selectedDepartment.DepartmentId;
                $scope.section.DepartmentName = $scope.selectedDepartment.Name;
                $http({
                    method: 'POST',
                    url: '/CollegeAppMaster/Section',
                    data: $scope.section
                }).then(function successCallback(response) {
                    // this callback will be called asynchronously
                    // when the response is available
                    $scope.sections = response.data;
                    $scope.section = {};
                    $scope.selectedDepartment = {};
                    $scope.dataLoaded = true;
                }, function errorCallback(response) {
                    // called asynchronously if an error occurs
                    // or server returns response with an error status.
                    alert(response.data.Error);
                    $scope.dataLoaded = true;
                });
            };

            //to load the Sections in the Grid
            $http({
                method: 'GET',
                url: '/CollegeAppMaster/AllSections'
            }).then(function successCallback(response) {
                // this callback will be called asynchronously
                // when the response is available
                $scope.sections = response.data;
                $scope.dataLoaded = true;
            }, function errorCallback(response) {
                // called asynchronously if an error occurs
                // or server returns response with an error status.
                alert(response.data.Error);
                $scope.dataLoaded = true;
            });

            //To Load the Department List in the Dropdown of the form
            $http({
                method: 'GET',
                url: '/CollegeAppMaster/AllDepartments'
            }).then(function successCallback(response) {
                // this callback will be called asynchronously
                // when the response is available
                $scope.departments = response.data;
                $scope.dataLoaded = true;
            }, function errorCallback(response) {
                // called asynchronously if an error occurs
                // or server returns response with an error status.
                alert(response.data.Error);
                $scope.dataLoaded = true;
            });

            $scope.EditSection = function(SectionId)
            {
                $scope.dataLoaded = false;
                $scope.section = {};
                $scope.selectedDepartment = {};
                $http({
                    method: 'GET',
                    url: '/CollegeAppMaster/EditSection?SectionId=' + SectionId
                }).then(function successCallback(response) {
                    // this callback will be called asynchronously
                    // when the response is available
                    $scope.section = response.data;
                    $scope.selectedDepartment.DepartmentId = response.data.DepartmentId;
                    $scope.selectedDepartment.Name = response.data.DepartmentName;
                    $scope.dataLoaded = true;
                }, function errorCallback(response) {
                    // called asynchronously if an error occurs
                    // or server returns response with an error status.
                    alert(response.data.Error);
                    $scope.dataLoaded = true;
                });
            }


            $scope.DeleteSection = function (SectionId) {
                if (confirm('Are you sure want delete this Section?')) {
                    $scope.dataLoaded = false;
                    $http({
                        method: 'GET',
                        url: '/CollegeAppMaster/DeleteSection?SectionId=' + SectionId
                    }).then(function successCallback(response) {
                        // this callback will be called asynchronously
                        // when the response is available
                        $scope.sections = response.data;
                        $scope.dataLoaded = true;
                    }, function errorCallback(response) {
                        // called asynchronously if an error occurs
                        // or server returns response with an error status.
                        alert(response.data.Error);
                        $scope.dataLoaded = true;
                    });
                }
            }
        }]);


        //Student Controller
        myApp.controller("StudentController", ["$http", "$scope", "$routeParams", function ($http, $scope, $routeParams) {
            $scope.dataLoaded = false;
            $scope.search = '';
            $scope.students = [];
            $scope.student = {};
            $scope.sections = [];
            $scope.departments = [];
            $scope.selectedDepartment = {};
            $scope.selecteSection = {};

            //get all student in to grid view
            $http({
                method: 'GET',
                url: '/CollegeAppMaster/AllStudents'
            }).then(function successCallback(response) {
                // this callback will be called asynchronously
                // when the response is available
                $scope.students = response.data;
                $scope.dataLoaded = true;
            }, function errorCallback(response) {
                // called asynchronously if an error occurs
                // or server returns response with an error status.
                alert(response.data.Error);
                $scope.dataLoaded = true;
            });

            $http({
                method: 'GET',
                url: '/CollegeAppMaster/AllDepartments'
            }).then(function successCallback(response) {
                // this callback will be called asynchronously
                // when the response is available
                $scope.departments = response.data;
                $scope.dataLoaded = true;
            }, function errorCallback(response) {
                // called asynchronously if an error occurs
                // or server returns response with an error status.
                alert(response.data.Error);
                $scope.dataLoaded = true;
            });

            $scope.getDeptSection = function () {
                $scope.sections = [];
                $scope.selecteSection = {};
                if ($scope.selectedDepartment.DepartmentId) {
                    $scope.dataLoaded = false;
                    $http({
                        method: 'GET',
                        url: '/CollegeAppMaster/GetDeptSectionByDeptId?DepartmentId=' + $scope.selectedDepartment.DepartmentId
                    }).then(function successCallback(response) {
                        // this callback will be called asynchronously
                        // when the response is available
                        $scope.sections = response.data;
                        $scope.dataLoaded = true;
                    }, function errorCallback(response) {
                        // called asynchronously if an error occurs
                        // or server returns response with an error status.
                        alert(response.data.Error);
                        $scope.dataLoaded = true;
                    });
                }
            }

            $scope.submit = function () {
                $scope.dataLoaded = false;
                $scope.student.DeptSectionId = $scope.selectedSection.DeptSectionId
                var pattern = /(\d{2})-(\d{3})-(\d{4})/;
                var DateOfJoin = $scope.student.DateOfJoin ? new Date($scope.student.DateOfJoin.replace(pattern, '$3-$2-$1')) : null;
                var DateOfGraduation = $scope.student.DateOfGraduation ? new Date($scope.student.DateOfGraduation.replace(pattern, '$3-$2-$1')) : null;
                $scope.student.DateOfJoin = DateOfJoin;// new Date($scope.student.DateOfJoin).toLocaleDateString("en-GB");
                $scope.student.DateOfGraduation = DateOfGraduation;//new Date($scope.student.DateOfGraduation).toLocaleDateString("en-GB");
                $http({
                    method: 'POST',
                    url: '/CollegeAppMaster/Student',
                    data: $scope.student
                }).then(function successCallback(response) {
                    // this callback will be called asynchronously
                    // when the response is available
                    $scope.students = response.data;
                    $scope.student = {};
                    $scope.selectedDepartment = {};
                    $scope.selectedSection = {};
                    $scope.sections = [];
                    $scope.dataLoaded = true;
                }, function errorCallback(response) {
                    // called asynchronously if an error occurs
                    // or server returns response with an error status.
                    alert(response.data.Error);
                    $scope.dataLoaded = true;
                });
            };

        }]);

    </script>
</body>
</html>